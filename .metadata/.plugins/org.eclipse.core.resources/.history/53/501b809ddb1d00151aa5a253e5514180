package beans;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Column; 
import javax.persistence.ElementCollection; 
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;


@Table(name = "cliente")
public class Cliente  extends User{

	private static final long serialVersionUID = 1L;
	private Long idCliente;
	private List<Direccion> direcciones = new ArrayList<Direccion>(0);
	private Map<Producto, Integer> visitas = new HashMap<Producto, Integer>();
	private List<Pedido> pedidos = new ArrayList<Pedido>(0);
	private Carrito carrito;
	
	@ManyToMany(fetch = FetchType.LAZY)
	@LazyCollection(LazyCollectionOption.FALSE)
	@JoinTable(
			name="cliente_direccion",
		    joinColumns={@JoinColumn(name="idCliente", referencedColumnName="idDireccion")},
		    inverseJoinColumns={@JoinColumn(name="idDireccion", referencedColumnName="idDireccion")})
	public List<Direccion> getDirecciones() {
		return direcciones;
	}
	public void setDirecciones(List<Direccion> direcciones) {
		this.direcciones = direcciones;
	}
	
	@ElementCollection(fetch = FetchType.LAZY)
	@LazyCollection(LazyCollectionOption.FALSE)
	public Map<Producto, Integer> getVisitas() {
		return visitas;
	}
	public void setVisitas(Map<Producto, Integer> visitas) {
		this.visitas = visitas;
	}
	
	@OneToMany(mappedBy = "cliente", fetch = FetchType.LAZY)
	@LazyCollection(LazyCollectionOption.FALSE)
	public List<Pedido> getPedidos() {
		return pedidos;
	}
	public void setPedidos(List<Pedido> pedidos) {
		this.pedidos = pedidos;
	}
	
	@ManyToOne
	@JoinColumn(name = "idCarrito")
	public Carrito getCarrito() {
		return carrito;
	}
	public void setCarrito(Carrito carrito) {
		this.carrito = carrito;
	}
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idCliente", unique = true, nullable = false)
	public Long getIdCliente() {
		return idCliente;
	}
	public void setIdCliente(Long idCliente) {
		this.idCliente = idCliente;
	}
	
	
	

}
